SubDir HAIKU_TOP src tests system benchmarks libMicro ;

SEARCH_SOURCE = [ FDirName $(SUBDIR) ] ;

# filter warnings we don't want here
TARGET_WARNING_CCFLAGS_$(TARGET_PACKAGING_ARCH)
	= [ FFilter $(TARGET_WARNING_CCFLAGS_$(TARGET_PACKAGING_ARCH))
		: -Wall -Wmissing-prototypes -Wsign-compare ] ;

UseHeaders [ FDirName $(SUBDIR) $(SUBDIR) $(SUBDIR) $(SUBDIR) $(SUBDIR) headers posix ] : true ;
UseHeaders [ FDirName $(SUBDIR) ] : true ;

SubDirHdrs $(HAIKU_TOP) src tests system benchmarks libMicro ;
SubDirCcFlags -nostdinc ;
SubDirCcFlags -D_REENTRANT ;

SubDirCcFlags -include $(SUBDIR)/config_libmicro.h ;

StaticLibrary libmicro.a :
	libmicro.c
	libmicro_main.c
	benchmark_init.c
	benchmark_fini.c
	benchmark_initrun.c
	benchmark_finirun.c
	benchmark_initbatch.c
	benchmark_finibatch.c
	benchmark_initworker.c
	benchmark_finiworker.c
	benchmark_optswitch.c
	benchmark_result.c
;

StaticLibrary libelided.a :
	elided.c ;

BinCommand <libmicro>bind : 
	bind.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand atomic : 
	: libelided.a ;

BinCommand cachetocache : 
	: libelided.a ;

BinCommand cascade_mutex : 
	cascade_mutex.c
	: libmicro.a ;

BinCommand cascade_cond : 
	cascade_cond.c
	: libmicro.a ;

BinCommand cascade_lockf : 
	cascade_lockf.c
	: libmicro.a ;

BinCommand cascade_fcntl : 
	cascade_fcntl.c
	: libmicro.a ;

BinCommand cascade_flock : 
	cascade_flock.c
	: libmicro.a ;

BinCommand chdir : 
	chdir.c
	: libmicro.a ;

BinCommand close : 
	close.c
	: libmicro.a ;

BinCommand close_tcp : 
	close_tcp.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand connection : 
	connection.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand dup : 
	dup.c
	: libmicro.a ;

BinCommand exec_bin : 
	exec_bin.c
	: libmicro.a ;

BinCommand exec : 
	exec.c
	: libmicro.a ;

BinCommand exit : 
	exit.c
	: libmicro.a ;

BinCommand exp : 
	exp.c
	: libmicro.a ;

BinCommand fcntl : 
	fcntl.c
	: libmicro.a ;

BinCommand fcntl_ndelay : 
	fcntl_ndelay.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand file_lock : 
	file_lock.c
	: libmicro.a ;

BinCommand fork : 
	fork.c
	: libmicro.a ;

# atm unsupported
BinCommand getcontext : 
	: libelided.a ;

BinCommand getenv : 
	getenv.c
	: libmicro.a ;

BinCommand gettimeofday : 
	gettimeofday.c
	: libmicro.a ;

BinCommand <libmicro>getpeername : 
	getpeername.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand getpid : 
	getpid.c
	: libmicro.a ;

BinCommand getrusage : 
	getrusage.c
	: libmicro.a ;

BinCommand getsockname : 
	getsockname.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand isatty : 
	isatty.c
	: libmicro.a ;

BinCommand listen : 
	listen.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand localtime_r : 
	localtime_r.c
	: libmicro.a ;

BinCommand <libmicro>log : 
	log.c
	: libmicro.a ;

BinCommand longjmp : 
	longjmp.c
	: libmicro.a ;

BinCommand lrand48 : 
	lrand48.c
	: libmicro.a ;

BinCommand lseek : 
	lseek.c
	: libmicro.a ;

BinCommand malloc : 
	malloc.c
	: libmicro.a ;

BinCommand memcpy : 
	memcpy.c
	: libmicro.a ;

BinCommand memmove : 
	memmove.c
	: libmicro.a ;

BinCommand memrand : 
	memrand.c
	: libmicro.a ;

BinCommand memset : 
	memset.c
	: libmicro.a ;

BinCommand mktime : 
	mktime.c
	: libmicro.a ;

# atm unsupported
BinCommand mprotect : 
	: libelided.a ;

BinCommand mmap :
	mmap.c
	: libmicro.a ;

# atm unsupported
BinCommand msync : 
	: libelided.a ;

BinCommand munmap :
	munmap.c 
	: libmicro.a ;

BinCommand mutex :
	mutex.c
	: libmicro.a ;

BinCommand nop : 
	nop.c
	: libmicro.a ;

BinCommand <libmicro>open : 
	open.c
	: libmicro.a ;

BinCommand pipe : 
	pipe.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand poll : 
	poll.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand pread : 
	pread.c
	: libmicro.a ;

BinCommand pthread_create :
	pthread_create.c
	: libmicro.a ;

BinCommand pwrite : 
	pwrite.c
	: libmicro.a ;

BinCommand read : 
	read.c
	: libmicro.a ;

BinCommand realpath : 
	realpath.c
	: libmicro.a ;

BinCommand recurse : 
	recurse.c
	recurse2.c
	: libmicro.a ;

BinCommand select : 
	select.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

# atm unsupported
BinCommand semop : 
	: libelided.a ;

# atm unsupported
BinCommand setcontext : 
	: libelided.a ;

BinCommand setsockopt : 
	setsockopt.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand sigaction : 
	sigaction.c
	: libmicro.a ;

BinCommand siglongjmp : 
	siglongjmp.c
	: libmicro.a ;

BinCommand signal : 
	signal.c
	: libmicro.a ;

BinCommand sigprocmask : 
	sigprocmask.c
	: libmicro.a ;


BinCommand <libmicro>socket :  
	socket.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

search on socket.c = [ FDirName $(SUBDIR) ] ;


BinCommand socketpair : 
	socketpair.c
	: libmicro.a $(TARGET_NETWORK_LIBS) ;

BinCommand <libmicro>stat : 
	stat.c
	: libmicro.a ;

BinCommand strcasecmp : 
	strcasecmp.c
	: libmicro.a ;

BinCommand strchr : 
	strchr.c
	: libmicro.a ;

BinCommand strcmp : 
	strcmp.c
	: libmicro.a ;

BinCommand strcpy : 
	strcpy.c
	: libmicro.a ;

BinCommand strftime : 
	strftime.c
	: libmicro.a ;

BinCommand strlen : 
	strlen.c
	: libmicro.a ;

BinCommand strtol : 
	strtol.c
	: libmicro.a ;

BinCommand system : 
	system.c
	: libmicro.a ;

BinCommand time : 
	time.c
	: libmicro.a ;

BinCommand times : 
	times.c
	: libmicro.a ;

BinCommand write : 
	write.c
	: libmicro.a ;

BinCommand writev : 
	writev.c
	: libmicro.a ;

BinCommand tattle : 
	tattle.c
	: libmicro.a ;
